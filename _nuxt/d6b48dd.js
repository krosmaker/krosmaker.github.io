(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{376:function(t,e,r){"use strict";r.r(e);r(60);var n=r(21),o=r(22),c=r(32),f=r(27),h=r(18),d=r(11),l=(r(12),r(1)),y=r(166),k=r(131),v=r(132),O=r(218);function R(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}();return function(){var r,n=Object(h.a)(t);if(e){var o=Object(h.a)(this).constructor;r=Reflect.construct(n,arguments,o)}else r=n.apply(this,arguments);return Object(f.a)(this,r)}}var F=function(t,e,r,desc){var n,o=arguments.length,c=o<3?e:null===desc?desc=Object.getOwnPropertyDescriptor(e,r):desc;if("object"===("undefined"==typeof Reflect?"undefined":Object(d.a)(Reflect))&&"function"==typeof Reflect.decorate)c=Reflect.decorate(t,e,r,desc);else for(var i=t.length-1;i>=0;i--)(n=t[i])&&(c=(o<3?n(c):o>3?n(e,r,c):n(e,r))||c);return o>3&&c&&Object.defineProperty(e,r,c),c},w=function(t){Object(c.a)(r,t);var e=R(r);function r(){return Object(n.a)(this,r),e.apply(this,arguments)}return Object(o.a)(r,[{key:"cardType",get:function(){return this.$store.state.card.type}},{key:"isFighter",get:function(){return this.cardType===v.CardType.FIGHTER}},{key:"isFavor",get:function(){return this.cardType===v.CardType.FAVOR}},{key:"isChallenge",get:function(){return this.cardType===v.CardType.CHALLENGE}},{key:"fighterState",get:function(){var t=this.$store.state.fighter;return t.twoSided&&this.isFlipped?this.$store.state.reverse:t}},{key:"isTwoSided",get:function(){return this.$store.state.fighter.twoSided}},{key:"isKrosmaster",get:function(){return this.fighterState.type!==k.b.MINION}},{key:"isMinion",get:function(){return this.fighterState.type===k.b.MINION}},{key:"isFlipped",get:function(){return this.$store.state.display.isFlipped},set:function(t){this.isFighter&&this.isTwoSided&&this.$store.commit("sidebar/reset"),this.$store.commit("display/setFlipped",t)}},{key:"isRegularSize",get:function(){return this.isFighter&&this.isKrosmaster||this.isChallenge}},{key:"isSmallSize",get:function(){return this.isFighter&&this.isMinion||this.isFavor}},{key:"isRounded",get:function(){var t=this.$store.state.display;return t.mode===O.DisplayMode.PLAY&&t.roundedCorners}}]),r}(l.a);w=F([y.a],w),e.default=w}}]);